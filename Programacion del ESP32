//----------PROYECTO #3 NEOPIXEL Y I2C----------//
//------------ELECTRONICA DIGITAL #2------------//
//-------Hector Andres Ortiz Reyes 20004--------//
//-----------14 de noviembre del 2023-----------//

//biblioteca de las librerias que se estan usando
#include <Wire.h>
#include "MAX30105.h"
#include <Adafruit_NeoPixel.h>
#include <HardwareSerial.h>

// Los pines RX y TX elegidos para usar el UART2 en el ESP32
#define RX_PIN 16
#define TX_PIN 17

// Configura el objeto Serial para UART2
HardwareSerial uart2(2); // aclaracion del UART2
MAX30105 particleSensor;
Adafruit_NeoPixel strip = Adafruit_NeoPixel(16, 5, NEO_GRB + NEO_KHZ800); // Usa el pin 5 para la tira de Neopixel y 16 LEDs en total
#define BUZZER_PIN 2 // pin del buzzer para que suene
bool ledE = false;

void setup()
{
  Serial.begin(115200); // Inicio del Serial1
  Serial2.begin(9600, SERIAL_8N1, RX_PIN, TX_PIN); //Inicio del Serial2 con los pines en uso
  Serial.println("Inicializando..."); // menu de espera hasta que se encienda

  pinMode(BUZZER_PIN, OUTPUT); // Configura el pin del buzzer como salida

  strip.begin();
  strip.show();
// si hay un error con el modulo de pulsos cardiacos se lanzara un mensaje de que no esta conectado
  if (!particleSensor.begin(Wire, I2C_SPEED_FAST)) { 
    Serial.println("MAX30105 no encontrado. Por favor, verifica la conexión y alimentación.");
    while (1);
  }
  // Color, rango, e intensidad de los leds del Neopixel 
  byte ledBrightness = 0x1F;
  byte sampleAverage = 8;
  byte ledMode = 3;
  int sampleRate = 100;
  int pulseWidth = 411;
  int adcRange = 4096;

  particleSensor.setup(ledBrightness, sampleAverage, ledMode, sampleRate, pulseWidth, adcRange);
// Calculos del sensor al recibir un dato del pulso
  const byte avgAmount = 64;
  long baseValue = 0;
  for (byte x = 0; x < avgAmount; x++) {
    baseValue += particleSensor.getIR();
  }
  baseValue /= avgAmount;

  for (int x = 0; x < 500; x++)
    Serial.println(baseValue);
}

void loop()
{
  int heartRate = particleSensor.getIR(); // resultado del RPM del corazon cuando se deja el dedo para leer el dato
  Serial2.print("Tu ritmo cardiaco es de: ");
  Serial2.println(heartRate / 1000); // calculo para que se envie el dato como un pulso con 3 digitos

  // Calcula las RPM (suponiendo que heartRate es el pulso por minuto)
  int rpm = heartRate;

  // Muestra solo los tres dígitos más significativos en el Serial Monitor
  Serial.print("Tu RPM es de: "); 
  if (rpm >= 1000) {
    Serial.println(rpm / 1000);
  } else {
    Serial.println(rpm);
  }
// el buzzer sonara solo cuando se realice un pulso de analisis
  tone(BUZZER_PIN, 500);
  delay(100);
  noTone(BUZZER_PIN);

  // Enciende todo el anillo de Neopixel en celeste y espera un momento
  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, strip.Color(0, 100, 255)); // Celeste segun el color RGB
    strip.show();
    delay(50);
  }

  // Apaga todo el anillo de Neopixel
  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, strip.Color(0, 0, 0)); // Apagado
  }
  strip.show();
  delay(50);

  // Lee datos de UART2
  while (Serial2.available()) {
    String receivedString = Serial2.readStringUntil('\n');
    Serial.print("Cadena recibida desde UART2: ");
    Serial.println(receivedString);

    // Cuando se presione el boton de la tiva C se enviara un mensaje que servira para cambiar el estado del neopixel para mostrar otro color
    if (receivedString.equals("melaza")) {
      ledE = true;
      // Inicia el temporizador de 16 segundos como timer
      unsigned long startTime = millis();
      while (millis() - startTime < 16000) {
        // Enciende un LED a la vez con colores rojo y verde
        for (int i = 0; i < strip.numPixels(); i++) {
          int redValue = 255 * (i < strip.numPixels() / 2); // La primera mitad en rojo
          int greenValue = 255 * (i >= strip.numPixels() / 2); // La segunda mitad en verde
          strip.setPixelColor(i, strip.Color(redValue, greenValue, 0));
          strip.show();
          delay(50);
        }
      }
      // Apaga los LEDs después de 16 segundos
      for (int i = 0; i < strip.numPixels(); i++) {
        strip.setPixelColor(i, strip.Color(0, 0, 0)); // Apagado
      }
      strip.show();
      ledE = false; // Restablece el indicador
    }
  }
}

